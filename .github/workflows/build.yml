name: Build & test

on:
  push:
    branches:
      - master

jobs:

  # Build the project
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the project on master
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_TOKEN }}
      - name: Install nodeJs
        uses: actions/setup-node@v2
        with:
          node-version: '15'
      - name: Install & build the project
        run: |
          npm ci
          npm run build
      - name: Create the cache
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: release-${{ github.sha }}

  # Run the tests
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Restore cache
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: release-${{ github.sha }}
      - name: Run the app
        run: npm start -- run example out
      - name: Run the tests
        run: npm test

  # Generate the code coverage
  code-coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Restore cache
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: release-${{ github.sha }}
      - name: Retrieve the code coverage percentage
        run: |
          SUMMARY="$(npm run test:coverage | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV
      - name: Create a custom badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 5edb6797cd18e510fd89a26d1cf2d2af
          filename: mrHyde__master.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest

  # Create a pre-release
  pre-release:
    name: Pre-release
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Restore cache
        uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: release-${{ github.sha }}
      - name: Create the Github prerelease
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.REPO_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Development Build
          files: |
            LICENSE.md
