name: Publish

on:
  pull_request:
    branches:
      - release/v*
    types: 
      - closed

jobs:

  # Build the project
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - uses: actions/checkout@v2
        with:
          token: '${{ secrets.REPO_TOKEN }}'
      - uses: actions/setup-node@v2
        with:
          node-version: '15'
      - run: npm ci
      - run: npm run build
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  # Tag master
  tag:
    name: Tag master
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: echo ::set-env name=VERSION::$(echo ${{ github.event.pull_request.head.ref }} | perl -nle 'm/release\/(v\d+\.\d+\.\d+)/; print $1')
      - run: git config --global user.name 'VuziBot'
      - run: git config --global user.email 'vuzi@protonmail.com'
      - run: git tag -a ${{ VERSION }}
      - run: git push origin ${{ VERSION }}

  # Perform a release
  release:
    name: Release to Github
    runs-on: ubuntu-latest
    needs: tag

    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.REPO_TOKEN }}"
          prerelease: false
          automatic_release_tag: false
          files: |
            LICENSE.md

  # Publish to NPM
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: tag

    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
